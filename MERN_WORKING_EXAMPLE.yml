version: '1.0'
metadata:
  name: mern-ai-ticket-system
  description: MERN stack with MongoDB Atlas
  author: mudasir_shah
  created_at: 2025-10-20

hooks:
  preUp:
    - echo "ðŸš€ Starting MERN environment..."
  postUp:
    - echo "âœ… Environment ready!"
    - echo "ðŸ“± Frontend: http://localhost:5173"
    - echo "ðŸ”§ Backend: http://localhost:3000"
  preDown:
    - echo "ðŸ§¹ Stopping containers..."
  postDown:
    - echo "âœ… Cleanup finished."

services:
  backend:
    image: node:20
    container_name: mern_backend
    working_dir: /app
    volumes:
      - ./backend:/app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      # Copy from backend/.env manually or use hooks to load
      MONGO_URI: mongodb+srv://mudasir:mudasir434@cluster0.xrllrhv.mongodb.net/
      JWT_SECRET: el-noir
      APP_URL: http://localhost:3000
    command: 
      - sh
      - -c
      - |
        if [ ! -d "node_modules" ]; then
          echo "ðŸ“¦ Installing backend dependencies..."
          npm install
        fi
        echo "ðŸ”§ Starting backend server..."
        npm run start
    hooks:
      afterStart:
        - echo "âœ… Backend running on http://localhost:3000"

  frontend:
    image: node:20
    container_name: mern_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: development
      VITE_SERVER_URL: http://localhost:3000
    command:
      - sh
      - -c
      - |
        if [ ! -d "node_modules" ]; then
          echo "ðŸ“¦ Installing frontend dependencies..."
          npm install
        fi
        echo "ðŸ“± Starting Vite dev server..."
        npm run dev -- --host 0.0.0.0
    depends_on:
      - backend
    hooks:
      afterStart:
        - echo "âœ… Frontend running on http://localhost:5173"

# Notes:
# 1. Dependencies auto-install on first run
# 2. Use --no-wait flag if wait_for times out (services need time to start)
# 3. Environment variables are inline (move sensitive ones to .env in production)
# 4. Backend uses 'npm run start' (your actual script name)
# 5. Frontend uses 'npm run dev -- --host 0.0.0.0' to bind to all interfaces
